---
version: '3.1'

services:

  # System monitoring
  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./persistent_volumes/prometheus:/opt/bitnami/prometheus/data
      - ./monitoring/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: '0'
    ports:
      - '3000:3000'
    volumes:
      - ./persistent_volumes/grafana:/var/lib/grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  # Database
  db:
    image: postgres:alpine
    hostname: db
    container_name: db
    restart: always
    networks:
      - rupl-net
    # TMP port for testing
    ports:
      - 8484:5432
    volumes:
      - ./persistent_volumes/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  # Project services
  ## Auth service
  auth:
    # build: ./auth
    image: dredfort/rupl-auth:latest
    hostname: auth
    container_name: auth
    restart: always
    networks:
      - rupl-net
    # TMP port for testing
    # ports:
    #   - 4242:4242
    depends_on:
      - db
    volumes:
      - ./global.cfg:/app/global.cfg
    environment:
      - DEBUG=true

  ## Profile management service
  profile:
    # build: ./profile
    image: dredfort/rupl-profile:latest
    hostname: profile
    container_name: profile
    restart: always
    networks:
      - rupl-net
    # TMP port for testing
    # ports:
    #   - 4848:4848
    depends_on:
      - auth
    volumes:
      - ./global.cfg:/app/global.cfg
    environment:
      - DEBUG=true
  
  ## Sessions receiver service
  sessions-receiver:
    image: dredfort/rupl-sessions-receiver:latest
    hostname: sessions-receiver
    container_name: sessions-receiver
    restart: always
    networks:
      - rupl-net
    # TMP port for testing
    # ports:
    #   - 4444:4444
    depends_on:
      - auth
    volumes:
      - ./global.cfg:/app/global.cfg
    environment:
      - DEBUG=true

  ## Training plans and sessions service
  training:
    # build: ./training
    image: dredfort/rupl-training:latest
    hostname: training
    container_name: training
    restart: always
    networks:
      - rupl-net
    # TMP port for testing
    # ports:
    #   - 4646:4646
    depends_on:
      - auth
    volumes:
      - ./global.cfg:/app/global.cfg
    environment:
      - DEBUG=true

  ## Web interface
  web:
    # build: ./web
    image: dredfort/rupl-web:latest
    hostname: web
    container_name: web
    restart: always
    networks:
      - rupl-net
    ports:
      - 443:443
      - 80:80
    depends_on:
      - auth
      - profile
      - sessions-receiver
      - training
    volumes:
      - ./global.cfg:/app/global.cfg
      - ./html:/html
      - /etc/letsencrypt/live/rupl.org/fullchain.pem:/app/fullchain.pem
      - /etc/letsencrypt/live/rupl.org/privkey.pem:/app/privkey.pem
    environment:
      - DEBUG=true

networks:
  rupl-net:
    driver: bridge
