---
version: '3.1'

services:

  # System monitoring
  prometheus:
    image: bitnami/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./persistent_volumes/prometheus:/opt/bitnami/prometheus/data
      - ./monitoring/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: '0'
    ports:
      - '3000:3000'
    volumes:
      - ./persistent_volumes/grafana:/var/lib/grafana

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    command:
      - '--path.rootfs=/host'
    volumes:
      - '/:/host:ro,rslave'

  # Database
  db:
    image: postgres:alpine
    hostname: db
    container_name: db
    restart: always
    networks:
      - rupl_net
    ports:
      - 42424:5432
    volumes:
      - ./persistent_volumes/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  adminer:
    image: adminer
    hostname: adminer
    container_name: adminer
    restart: always
    networks:
      - rupl_net
    ports:
      - 21212:8080
    depends_on:
      - db

  # Project services
  ## Auth service
  auth:
    build: ./auth
    hostname: auth
    container_name: auth
    restart: always
    networks:
      - rupl_net
    volumes:
      - ./global.cfg:/app/global.cfg
      # - ./auth/data:/app/data

      ## Web interface
  web:
    build: ./web
    hostname: web
    container_name: web
    restart: always
    networks:
      - rupl_net
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./global.cfg:/app/global.cfg
      - ./html:/html
      - /etc/letsencrypt/live/rupl.org/fullchain.pem:/app/fullchain.pem
      - /etc/letsencrypt/live/rupl.org/privkey.pem:/app/privkey.pem

networks:
  rupl_net:
    driver: bridge
