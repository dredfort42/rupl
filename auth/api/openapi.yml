openapi: 3.0.0

info:
  version: 1.0.0
  title: Authorization service API
  termsOfService: "https://rupl.org/terms/"
  contact:
    name: Rupl
    email: i@rupl.org
    url: "https://rupl.org/contact"
  license:
    name: GNU General Public License v3.0
    url: "https://www.gnu.org/licenses/gpl-3.0.html"
  x-logo:
    url: "https://rupl.org/images/rupl-logo.png"
  description: |
    This is a description of the rupl.org authorization service API and its operations.

tags:
  - name: User
    description: >-
      The OAuth 2.0 user authorization for browser-based web applications and other clients that can interact with a user-agent.
  - name: Device
    description: >-
      The OAuth 2.0 device authorization for browserless and input-constrained devices like watches and fitness trackers.

servers:
  - url: "https://rupl.org"
    description: "Production server"
  - url: "http://dredfort.ddns.net:4242"
    description: "Development server"
  - url: "http://localhost:4242"
    description: "Local server"

paths:
  /api/v1/auth/user/signup:
    post:
      tags:
        - User
      summary: Register a new user
      description: |
        Register a new user with the rupl.org authorization service.
      operationId: register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user successfully registered"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                invalidJson:
                  summary: Invalid request
                  value:
                    error: "invalid_request"
                    error_description: "invalid JSON in the request body | ..."
                missingEmail:
                  summary: Missing email
                  value:
                    error: "invalid_parameter"
                    error_description: "email address is required"
                missingPassword:
                  summary: Missing password
                  value:
                    error: "invalid_parameter"
                    error_description: "password is required"
                passwordTooShort:
                  summary: Password isn't strong enough
                  value:
                    error: "invalid_parameter"
                    error_description: "password isn't strong enough | ..."
                userExists:
                  summary: User exists
                  value:
                    error: "user_exists"
                    error_description: "user with this email already exists"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                tokenError:
                  summary: Token error
                  value:
                    error: "token_error"
                    error_description: "failed to generate tokens | ..."
                serverError:
                  summary: Database error
                  value:
                    error: "database_error"
                    error_description: "error creating user in the database | ..."

  /api/v1/auth/user/verify:
    get:
      security:
        - OAuth2AccessToken: []
      tags:
        - User
      summary: Verify a user's
      description: |
        Verify a user with the rupl.org authorization service.
      operationId: verify_user
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user successfully verified"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAccessToken:
                  summary: Missing access token
                  value:
                    error: "token_error"
                    error_description: "missing access token"
                failedToVerifyToken:
                  summary: Failed to verify token
                  value:
                    error: "token_error"
                    error_description: "failed to verify access token"

  /api/v1/auth/user/delete:
    delete:
      security:
        - OAuth2AccessToken: [write, admin]
      tags:
        - User
      summary: Delete a user
      description: |
        Delete a user from the rupl.org authorization service.
      operationId: delete_user
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user successfully deleted"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAccessToken:
                  summary: Missing access token
                  value:
                    error: "token_error"
                    error_description: "missing access token"
                failedToVerifyToken:
                  summary: Failed to verify token
                  value:
                    error: "token_error"
                    error_description: "failed to verify access token"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                databaseSessionDeleteAllError:
                  summary: Database delete all user's sessions error
                  value:
                    error: "database_error"
                    error_description: "failed to delete user's sessions from the database | ..."
                databaseDeviceDeleteAllError:
                  summary: Database delete all user's devices error
                  value:
                    error: "database_error"
                    error_description: "failed to delete user's devices from the database | ..."
                databaseUserDeleteError:
                  summary: Database delete user error
                  value:
                    error: "database_error"
                    error_description: "failed to delete user from the database | ..."

  /api/v1/auth/user/login:
    post:
      security:
        - basicAuth: []
      summary: Login a user
      tags:
        - User
      description: |
        Login a user with the rupl.org authorization service.
      operationId: login_user
      parameters:
        - name: remember
          in: query
          required: false
          schema:
            type: boolean
          description: |
            Remember the user's login session on the client device.
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user successfully logged in"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingCredentials:
                  summary: Missing credentials
                  value:
                    error: "invalid_parameter"
                    error_description: "authorization header is invalid"
                invalidCredentials:
                  summary: Invalid credentials
                  value:
                    error: "invalid_parameter"
                    error_description: "invalid email or password"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                tokenError:
                  summary: Token error
                  value:
                    error: "token_error"
                    error_description: "failed to generate tokens | ..."
                databaseError:
                  summary: Database error
                  value:
                    error: "database_error"
                    error_description: "failed to update user tokens in the database | ..."

  /api/v1/auth/user/refresh:
    get:
      security:
        - OAuth2AccessToken: []
      tags:
        - User
      summary: Refresh a user's access and refresh tokens
      description: |
        Refresh a user's access and refresh tokens with the rupl.org authorization service.
      operationId: refresh_tokens
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user tokens successfully refreshed"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingRefreshToken:
                  summary: Missing refresh token
                  value:
                    error: "token_error"
                    error_description: "missing refresh token"
                failedToVerifyToken:
                  summary: Failed to verify token
                  value:
                    error: "token_error"
                    error_description: "failed to verify refresh token"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                tokenError:
                  summary: Token error
                  value:
                    error: "token_error"
                    error_description: "failed to generate tokens | ..."
                databaseError:
                  summary: Database error
                  value:
                    error: "database_error"
                    error_description: "failed to update user tokens in the database | ..."

  /api/v1/auth/user/logout:
    post:
      security:
        - OAuth2AccessToken: []
      tags:
        - User
      summary: Logout a user
      description: |
        Logout a user from the rupl.org authorization service.
      operationId: logout_user
      parameters:
        - name: all
          in: query
          required: false
          schema:
            type: boolean
          description: |
            Sign out from all browsers.
      responses:
        "200":
          description: OK
          content:
            application/json:
              example:
                message: "user successfully logged out"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                missingAccessToken:
                  summary: Missing access token
                  value:
                    error: "token_error"
                    error_description: "missing access token"
                failedToVerifyToken:
                  summary: Failed to verify token
                  value:
                    error: "token_error"
                    error_description: "failed to verify access token"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                databaseError:
                  summary: Database error
                  value:
                    error: "database_error"
                    error_description: "failed to delete user's tokens from the database | ..."

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    OAuth2AccessToken:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/api/v1/auth/login"
          refreshUrl: "/api/v1/auth/refresh"
          scopes:
            write: "write access"
            admin: "admin access"
  schemas:
    Error:
      description: |
        Error response
      type: object
      properties:
        error:
          type: string
          example: "invalid_request"
        error_description:
          type: string
          example: "user with this email already exists"
    Email:
      description: |
        User email address
      type: string
      format: email
      example: john.smith@example.com
    Password:
      description: |
        User password
      type: string
      format: password
      example: P@ssw0rd
    User:
      description: |
        User data
      type: object
      properties:
        email:
          $ref: "#/components/schemas/Email"
        password:
          $ref: "#/components/schemas/Password"
    UserLogin:
      description: |
        User login data
      type: object
      properties:
        email:
          $ref: "#/components/schemas/Email"
        password:
          $ref: "#/components/schemas/Password"
        remember:
          type: boolean
          example: true
